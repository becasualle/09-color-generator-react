import React, { useState } from 'react'
import SingleColor from './SingleColor'

import Values from 'values.js'

function App() {
  // color stores user input value
  const [color, setColor] = useState('');
  // error will change if user input can't be handled by values library
  const [error, setError] = useState(false);
  // list stores all colors that generates by values library
  // by default set initial value to blues array of objects
  const [list, setList] = useState(new Values('#00b4d8').all(10));


  const handleSubmit = e => {
    e.preventDefault();
    // if color format is correct we store array of color objects generated by library in the colors in list
    try {
      let colors = new Values(color).all(10);
      setList(colors);
      setError(false);
    }
    // if user input is not correct we change error state
    catch (error) {
      setError(true);
      console.log(error);
    }

  }

  return (
    <>
      <section className="container">
        <h3>color generator</h3>
        <form onSubmit={handleSubmit}>
          {/* controlled input, when we type something we will change value in a state */}
          {/* if error is true we show red border by updating class */}
          <input type="text" value={color} onChange={(e) => { setColor(e.target.value) }} placeholder='#00b4d8' className={`${error ? 'error' : null}`} />
          <button className="btn" type="submit">submit</button>
        </form>
      </section>

      <section className="colors">
        {/* for each element in list we generate component */}
        {list.map((color, index) => {
          // we send all color object properties as props and invoke hex property. We send index because we need change font color using it's values
          return <SingleColor key={index} {...color} index={index} hex={color.hex} />
        })}
      </section>
    </>
  )
}

export default App
